//
//  YDCustomerView.m
//  CRM
//
//  Created by ios on 16/8/2.
//  Copyright © 2016年 YD_iOS. All rights reserved.
//

#import "YDCustomerListView.h"
#import "YDCustomerListCell.h"
#import "YDSearchController.h"
#import "YDCustSearchResultView.h"

@interface YDCustomerListView () <UITableViewDelegate,UITableViewDataSource,UISearchBarDelegate,UISearchControllerDelegate>

@property (nonatomic, strong) UITableView *oneTableView;
@property (nonatomic, strong) UITableView *twoTableView;

@property (nonatomic, strong) UISearchController *searchController;
@property (nonatomic, strong) UISearchController *twoSearchController;

@property (nonatomic, strong) YDSearchController *searchVC;

/**
 *  搜索结果展示view
 */
@property (nonatomic, strong) YDCustSearchResultView *searchResultView;

@end
@implementation YDCustomerListView

- (instancetype)init
{
    if (self = [super init]) {
        [self createUI];
    }
    return self;
}

- (void)createUI
{
    
    _oneTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, kScreenHeight) style:UITableViewStylePlain];
    self.oneTableView.dataSource = self;
    self.oneTableView.delegate = self;
    self.oneTableView.tableHeaderView = self.searchController.searchBar;
    [self addSubview:_oneTableView];
    
    _twoTableView = [[UITableView alloc] initWithFrame:CGRectMake(kScreenWidth, 64.0f, kScreenWidth, kScreenHeight) style:UITableViewStylePlain];
    self.twoTableView.dataSource = self;
    self.twoTableView.delegate = self;
    self.twoTableView.tableHeaderView = self.twoSearchController.searchBar;
    [self addSubview:_twoTableView];
}

#pragma mark - =====================tableView delegate===========================

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 10;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    YDCustomerListCell *cell = [YDCustomerListCell cellWithTabelView:tableView];
    return cell;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return kCustomerListCellHeight;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView == self.oneTableView) {
        if ([self.delegate respondsToSelector:@selector(leftTableViewDidSelectIndex:)]) {
            [self.delegate leftTableViewDidSelectIndex:indexPath.row];
        }
    } else {
        if ([self.delegate respondsToSelector:@selector(rightTableViewDidSelectIndex:)]) {
            [self.delegate rightTableViewDidSelectIndex:indexPath.row];
        }
    }
    
}

-(NSArray *)tableView:(UITableView *)tableView editActionsForRowAtIndexPath:(NSIndexPath *)indexPath
{
    //title可自已定义
    UITableViewRowAction *deleteRoWAction = [UITableViewRowAction rowActionWithStyle:UITableViewRowActionStyleDestructive title:@"拨打电话" handler:^(UITableViewRowAction *action, NSIndexPath *indexPath) {
        
    }];
    deleteRoWAction.backgroundColor = kNavigationBackgroundColor;
    //此处是iOS8.0以后苹果最新推出的api，UITableViewRowAction，Style是划出的标签颜色等状态的定义，这里也可自行定义
    UITableViewRowAction *editRowAction = [UITableViewRowAction rowActionWithStyle:UITableViewRowActionStyleNormal title:@"添加跟进" handler:^(UITableViewRowAction *action, NSIndexPath *indexPath) {
        
    }];
    editRowAction.backgroundColor = kGreenButtonBackgroundColor;//可以定义RowAction的颜色
    
    //最后返回这俩个RowAction 的数组
    if (tableView == self.oneTableView) {
        return @[deleteRoWAction, editRowAction];
    } else {
        return @[deleteRoWAction];
    }
}
#pragma mark -  ======================搜索模块============================
#pragma mark 搜索控制权
- (UISearchController *) searchController
{
    if (_searchController == nil) {
        _searchController = [[UISearchController alloc] initWithSearchResultsController:self.searchVC];
        [_searchController.searchBar sizeToFit];
        [_searchController.searchBar setDelegate:self];
        [_searchController.searchBar setPlaceholder:@"搜索"];
        _searchController.searchBar.searchBarStyle = UISearchBarStyleMinimal;
        [_searchController.searchBar.layer setBorderWidth:0];
        
        // 修改UISearchBar右侧的取消按钮文字颜色及背景图片
        for (UIView *searchbuttons in [_searchController.searchBar.subviews[0] subviews]){
            if ([searchbuttons isKindOfClass:[UIButton class]]) {
                UIButton *cancelButton = (UIButton*)searchbuttons;
                // 修改文字颜色
                [cancelButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
                [cancelButton setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
            }
        }
    }
    return _searchController;
}

- (UISearchController *) twoSearchController
{
    if (_twoSearchController == nil) {
        _twoSearchController = [[UISearchController alloc] initWithSearchResultsController:self.searchVC];
        [_twoSearchController.searchBar sizeToFit];
        [_twoSearchController.searchBar setDelegate:self];
        [_twoSearchController.searchBar setPlaceholder:@"搜索"];
        _twoSearchController.searchBar.searchBarStyle = UISearchBarStyleMinimal;
        [_twoSearchController.searchBar.layer setBorderWidth:0];
        
        
        // 修改UISearchBar右侧的取消按钮文字颜色及背景图片
        for (UIView *searchbuttons in [_twoSearchController.searchBar.subviews[0] subviews]){
            if ([searchbuttons isKindOfClass:[UIButton class]]) {
                UIButton *cancelButton = (UIButton*)searchbuttons;
                // 修改文字颜色
                [cancelButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
                [cancelButton setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
            }
        }
    }
    return _twoSearchController;
}

- (YDSearchController *)searchVC
{
    if (_searchVC == nil) {
        _searchVC = [[YDSearchController alloc] init];
    }
    return _searchVC;
}

#pragma mark 搜索框的代理方法，搜索输入框获得焦点（聚焦）
- (YDCustSearchResultView *)searchResultView
{
    if (_searchResultView == nil) {
        _searchResultView = [[YDCustSearchResultView alloc] init];
        _searchResultView.frame = CGRectMake(0, 0, kScreenWidth, kScreenHeight);
    }
    return _searchResultView;
}

- (BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar
{
    return YES;
}

- (void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar
{
    if ([self.delegate respondsToSelector:@selector(searchBarDidEndEditingWithSearchBar:)]) {
        [self.delegate searchBarDidEndEditingWithSearchBar:searchBar];
    }
    
    searchBar.searchBarStyle = UISearchBarStyleDefault;
    [searchBar setBarTintColor:kNavigationBackgroundColor];
    [searchBar.layer setBorderWidth:0.5];
    [searchBar.layer setBorderColor:kNavigationBackgroundColor.CGColor];
    
    
    [searchBar setShowsCancelButton:YES animated:YES];
    NSArray *array = [[searchBar subviews][0] subviews];
    // 修改UISearchBar右侧的取消按钮文字颜色及背景图片
    for (UIView *searchbuttons in array){
        if ([searchbuttons isKindOfClass:[UIButton class]]) {
            UIButton *cancelButton = (UIButton*)searchbuttons;
            // 修改文字颜色
            [cancelButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
            [cancelButton setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
            [cancelButton setTitle:@"取消" forState:UIControlStateNormal];
        }
    }
}
- (BOOL)searchBarShouldEndEditing:(UISearchBar *)searchBar
{
    return YES;
}
- (void)searchBarTextDidEndEditing:(UISearchBar *)searchBar
{
   
    
}
- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText
{
    [self.searchVC.tableView reloadData];
    if ([self.delegate respondsToSelector:@selector(searchBarTextChangeWithSearchBar:)]) {
        [self.delegate searchBarTextChangeWithSearchBar:searchBar];
    }
}

- (void)searchBarCancelButtonClicked:(UISearchBar *)searchBar
{
    if ([self.delegate respondsToSelector:@selector(searchBarCancelButtonClick)]) {
        [self.delegate searchBarCancelButtonClick];
    }
    
    [searchBar.layer setBorderWidth:0.5];
    [searchBar.layer setBorderColor:[UIColor whiteColor].CGColor];
    searchBar.searchBarStyle = UISearchBarStyleMinimal;
    
    
    
}
- (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar
{
    
}


#pragma mark - ====================对象方法==========================
#pragma mark 是否显示左边（意向客户）
- (void)showOneTableView:(BOOL)isShow
{
    
    UIView *searchView = [[UIView alloc] init];
    searchView.frame = CGRectMake(0, 64.0f, kScreenWidth, 44.0f);
    searchView.backgroundColor = [UIColor whiteColor];
    
    UISearchBar *searchBar = [[UISearchBar alloc] init];
    searchBar.userInteractionEnabled = NO;
    searchBar.searchBarStyle = UISearchBarStyleMinimal;
    searchBar.placeholder = @"搜索";
    searchBar.frame = CGRectMake(0, 0, kScreenWidth, 44.0f);
    [searchView addSubview:searchBar];
    
    [self addSubview:searchView];
    
    
    if (isShow) {
        //显示左边的
        if (self.oneTableView.x) {
            //x值不为0，说明没显示
            [UIView animateWithDuration:0.25f animations:^{
                self.oneTableView.frame = CGRectMake(0, 0, kScreenWidth, kScreenHeight);
                self.twoTableView.frame = CGRectMake(kScreenWidth, 64.0f, kScreenWidth, kScreenHeight);
            } completion:^(BOOL finished) {
                [searchView removeFromSuperview];
                
            }];
        }
        
    } else {
        //显示右边的
        if (self.twoTableView.x) {
            //x值不为0，说明没显示
            [UIView animateWithDuration:0.25f animations:^{
                self.oneTableView.frame = CGRectMake(-kScreenWidth, 0, kScreenWidth, kScreenHeight);
                self.twoTableView.frame = CGRectMake(0, 64.0f, kScreenWidth, kScreenHeight);
            } completion:^(BOOL finished) {
                [searchView removeFromSuperview];
                
            }];
        }
    }
    
}

@end
