//
//  YDUpdateCustomersViewController.m
//  CRM
//
//  Created by YD_iOS on 16/7/19.
//  Copyright © 2016年 YD_iOS. All rights reserved.
//

#import "YDNavigationController.h"
#import "YDAlertController.h"

#import "YDUpdateCustomersViewController.h"
#import "YDUpdateCustomersInfoVC.h"
#import "YDUpdateFollowupVC.h"
#import "YDEditMessageVC.h"

#import "YDUpdateCustomersCell.h"
#import "YDEnterPhoneNO.h"

#import "YDPassengerModel.h"
#import "YDCustListModel.h"
#import "YDDataService.h"
#import "YDQuoteAddCustomerController.h"
#import "YDAddCustFlowController.h"

@interface YDUpdateCustomersViewController (){
    NSMutableDictionary *_newMDic;
    NSArray *_newMDicKey;
}

@property (weak, nonatomic) IBOutlet UITableView *myTableView;
@property (strong, nonatomic) YDEnterPhoneNO *enterPhoneNOView;
@property (strong, nonatomic) YDPassengerModel *selectPModel;
@property (nonatomic, strong) YDCustListModel *custListModel;

@property (copy, nonatomic) NSMutableArray *passengers; //待补充客流

@end

@implementation YDUpdateCustomersViewController

#pragma mark ----- vc lift cycle 生命周期

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    
    
    
    [self initData];
    [self initUI];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    self.navigationController.navigationBar.translucent = YES;
    //隐藏导航条下的黑线
    [self.navigationController.navigationBar setBackgroundImage:[UIImage new] forBarMetrics:UIBarMetricsDefault];
    [self.navigationController.navigationBar setShadowImage:[UIImage new]];
    
    [self showHudInView:kWindow hint:@""];
    [self loadPassengersFromNetwork];
    
    _custListModel = nil; //重新进入这个页面后刷新数据
}

- (void)viewDidAppear:(BOOL)animated{
    [super viewDidAppear:animated];
    [self.view addSubview:self.enterPhoneNOView];
}

- (void)viewDidDisappear:(BOOL)animated
{
    [self.enterPhoneNOView hiddenView];
    [super viewDidDisappear:animated];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark ----- get and setter 属性的set和get方法

-(YDEnterPhoneNO *)enterPhoneNOView{
    if (_enterPhoneNOView == nil) {
        _enterPhoneNOView = [[[NSBundle mainBundle] loadNibNamed:@"YDEnterPhoneNO" owner:nil options:nil] lastObject];
        _enterPhoneNOView.center = CGPointMake(kScreenWidth/2, kScreenHeight*1.5);
        WEAKSELF
        _enterPhoneNOView.InputPhoneBlock = ^(NSString *phone) {
            [weakSelf returnUserInfoWithPhoneNO:phone];
        };
        _enterPhoneNOView.ClickNextButton = ^(NSString *pNO){
            
            [weakSelf goNewFollowup_phoneNO:pNO];
        };
        _enterPhoneNOView.ClickUserInfo = ^(YDCustListModel *cModle){
            
            _custListModel = cModle;
            [weakSelf queryingCustomerPhone];
        };
    }
    return _enterPhoneNOView;
}

#pragma mark ----- event Response 事件响应(手势 通知)
#pragma mark ----- custom action for UI 界面处理有关

- (void)initUI{
    self.title = @"待补充客流";

    [_myTableView registerNib(@"YDUpdateCustomersCell")];
    
    WEAKSELF
    _myTableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        [weakSelf loadPassengersFromNetwork];
    }];
    
}

#pragma mark 补充客流界面（有报价的非意向客户）
- (void)goNewFollowup_phoneNO:(NSString *)phoneNO{
    
    if (_selectPModel.hasQuote) {
        YDQuoteAddCustomerController *vc = [[YDQuoteAddCustomerController alloc] init];
        vc.passengerModel = _selectPModel;
        [self.navigationController pushViewController:vc animated:YES];
    } else {
//原界面
//        YDUpdateCustomersInfoVC *vc = [[YDUpdateCustomersInfoVC alloc]initWithNibName:@"YDUpdateCustomersInfoVC" bundle:nil];
//        vc.phoneNO = phoneNO;
//        vc.cModel = _custListModel;
//        vc.mId = _selectPModel.modelId;
//        [self.navigationController pushViewController:vc animated:YES];
        YDAddCustFlowController *vc = [[YDAddCustFlowController alloc] init];
        vc.customerPhone = phoneNO;
        vc.passengerModel = _selectPModel;
        vc.passengerId = _selectPModel.modelId;
        [self.navigationController pushViewController:vc animated:YES];
    }
    
}

#pragma mark 补充跟进界面
- (void)goAddFollowup_setLow:(BOOL)b{
    
    YDUpdateFollowupVC *vc = [[YDUpdateFollowupVC alloc] initWithNibName:@"YDUpdateFollowupVC" bundle:nil];
    vc.cModel = _custListModel;
    vc.canSetLow = b;
    vc.passengerId = _selectPModel.modelId;
    [self.navigationController pushViewController:vc animated:YES];
}

#pragma mark  左上角返回事件拦截
- (BOOL)navigationShouldPopOnBackButton{
    if (_enterPhoneNOView.centerY == kScreenHeight/2) {
        
        [_enterPhoneNOView hiddenView];
        return NO;
    }else
        return YES;
}

#pragma mark ----- custom action for DATA 数据处理有关

- (void)initData{
    
    [self makeData];
}
- (void)makeData{
    
    _newMDic = [NSMutableDictionary dictionary];

    for (int i=0; i<_passengers.count; i++) {
        YDPassengerModel *pModel = _passengers[_passengers.count-i-1];
        NSString *keyS = [NSDate stringWithDate:pModel.createDate format:@"yyyy-MM-dd"];
        NSMutableArray *valueMA = [NSMutableArray arrayWithArray:[_newMDic objectForKey:keyS]];
        [valueMA addObject:pModel];
        
        [_newMDic setObject:valueMA forKey:keyS];
    }
    
    _newMDicKey = [NSDate returnNewArray:_newMDic.allKeys];//获取所有key 并排序
}

#pragma mark 获取客流列表
- (void)loadPassengersFromNetwork{
    WEAKSELF
    NSString *url = [NSString stringWithFormat:@"%@type=crm&sid=%@",kListPassenger,getNSUser(@"youdao.CRM_SID")];
    [YDDataService startSyncRequest:@{} url:url block:^(id result) {
        [self hideHud];
        
        [weakSelf.myTableView.mj_header endRefreshing];

        if ([[result objectForKey:@"code"] isEqualToString:@"S_OK"]) {
            
            _passengers = [NSMutableArray array];
            for (NSDictionary *dic in [[result objectForKey:@"var"] objectForKey:@"list"]) {
                YDPassengerModel *m = [[YDPassengerModel alloc] initWithDic:dic];
                [_passengers addObject:m];
            }
            
            [weakSelf makeData];
            [self.myTableView reloadData];
        }
    } failBlock:^(id error) {
        [weakSelf showHint:@"获取待补充客流失败"];
        [weakSelf.myTableView.mj_header endRefreshing];
    }];
}

#pragma mark 根据手机号查用户信息
- (void)returnUserInfoWithPhoneNO:(NSString *)phoneNO{
    WEAKSELF
    NSString *url = [NSString stringWithFormat:@"%@sid=%@",kCrmGetCustomerInfo,getNSUser(@"youdao.CRM_SID")];
    NSDictionary *rDic = @{@"mobile":phoneNO};
    
    [YDDataService startRequest:rDic url:url block:^(id result) {
        
        [weakSelf hideHud];

        if ([[result objectForKey:@"code"] isEqualToString:@"CRM_GET_CUSTOMER_INFO_FAIL_0X001"]) {
            
            _enterPhoneNOView.nextButton.hidden = NO;
        }else if([[result objectForKey:@"code"] isEqualToString:@"S_OK"]){
            //显示查到的用户信息
            NSMutableDictionary *allDic = [NSMutableDictionary dictionary];
            [allDic addEntriesFromDictionary:[[result objectForKey:@"var"] objectForKey:@"customerInfo"]];
            [allDic addEntriesFromDictionary:[[result objectForKey:@"var"] objectForKey:@"intentionInfo"]];
            
            NSDictionary *intentionInfo = [[result objectForKey:@"var"] objectForKey:@"customerInfo"];
            [allDic addEntriesFromDictionary:@{@"createTimeString":[intentionInfo objectForKey:@"createTimeString"]}];
            
            YDCustListModel *cModel = [[YDCustListModel alloc] initWithDict:allDic];
            cModel.modelId = allDic[@"customerId"];
            _enterPhoneNOView.cModel = cModel;
        }else{
            sleep(1);
            [weakSelf showHint:@"获取信息失败"];
        }
    } failBlock:^(id error) {
        [weakSelf hideHud];
        [weakSelf showHint:@"查询失败"];
    }];
}

#pragma mark 选择客户之后下一步动作
- (void)searchNext{
    WEAKSELF
    
    //有报价的客流
    if (_selectPModel.hasQuote) {
        if (_selectPModel.isInten) {
            
            [weakSelf quotePassengerWithCustomerPhone:_selectPModel.customerPhone];
            
        } else {
            //非意向客户,有报价的客流，直接新建客户，不验证
            [weakSelf goNewFollowup_phoneNO:@""];
        }
        
    } else {
        _enterPhoneNOView.pModel = _selectPModel;
        [_enterPhoneNOView showView];
    }
    
}

#pragma mark 点击有报价的客流，如果是意向客户，查询客户信息
- (void)quotePassengerWithCustomerPhone:(NSString *)phone
{
    WEAKSELF
    NSString *url = [NSString stringWithFormat:@"%@sid=%@",kCrmGetCustomerInfo,getNSUser(@"youdao.CRM_SID")];
    NSDictionary *rDic = @{@"mobile":phone};
    [self showHudInView:kWindow hint:@""];
    [YDDataService startRequest:rDic url:url block:^(id result) {
        
        [weakSelf hideHud];
        
        if ([[result objectForKey:@"code"] isEqualToString:@"CRM_GET_CUSTOMER_INFO_FAIL_0X001"]) {
            
            _enterPhoneNOView.nextButton.hidden = NO;
        }else if([[result objectForKey:@"code"] isEqualToString:@"S_OK"]){
            //显示查到的用户信息
            NSMutableDictionary *allDic = [NSMutableDictionary dictionary];
            [allDic addEntriesFromDictionary:[[result objectForKey:@"var"] objectForKey:@"customerInfo"]];
            [allDic addEntriesFromDictionary:[[result objectForKey:@"var"] objectForKey:@"intentionInfo"]];
            
            NSDictionary *intentionInfo = [[result objectForKey:@"var"] objectForKey:@"customerInfo"];
            [allDic addEntriesFromDictionary:@{@"createTimeString":[intentionInfo objectForKey:@"createTimeString"]}];
            
            YDCustListModel *cModel = [[YDCustListModel alloc] initWithDict:allDic];
            cModel.modelId = allDic[@"customerId"];
            _custListModel = cModel;
            
            if (_custListModel.own) {
                //走正常跟进流程
                [weakSelf goAddFollowup_setLow:YES];
            }else{
                //走限制跟进流程（不能设置客户级别为战败）
                [weakSelf goAddFollowup_setLow:NO];
            }
        }
    } failBlock:^(id error) {
        [weakSelf hideHud];
        [weakSelf showHint:@"查询失败"];
    }];
}

#pragma mark 查询号码后返回调用的方法
- (void)queryingCustomerPhone
{
    WEAKSELF
    if ([_custListModel.customerLevel isEqualToString:@"Z"]) {
        
        [YDAlertController showAlertWith:self title:nil message:@"此客户为战败客户，是否激活？" confirm:^(UIAlertAction *action) {
            
            //走限制跟进流程（不能设置客户级别为战败）
            [weakSelf goAddFollowup_setLow:NO];
            
        } cancel:^(UIAlertAction *action) {
            //不做任何操作
        }];
        
    }else{
        if (_custListModel.own) {
            //走正常跟进流程
            [weakSelf goAddFollowup_setLow:YES];
        }else{
            //走限制跟进流程（不能设置客户级别为战败）
            [weakSelf goAddFollowup_setLow:NO];
        }
    }
}

#pragma mark ----- xxxxxx delegate 各种delegate回调
#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return _newMDicKey.count;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    NSString *key = _newMDicKey[section];
    return [_newMDic[key] count];
}
- (nullable UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    UILabel *label = [[UILabel alloc]initWithFrame:CGRectMake(0, 0, kScreenWidth, 25)];
    label.backgroundColor = [UIColor whiteColor];
    label.font = [UIFont systemFontOfSize:12];
    label.textColor = kNavigationBackgroundColor;
    NSDate *date = [NSDate dateWithString:_newMDicKey[section] format:@"yyyy-MM-dd"];
    label.text = [NSString stringWithFormat:@"    %@",[NSDate compareDate:date]];
    return label;
}
- (nullable UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    return [[UIView alloc]init];
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    YDUpdateCustomersCell *cell = [tableView dequeueReusableCellWithIdentifier:@"YDUpdateCustomersCell" forIndexPath:indexPath];
    NSArray *secArray = _newMDic[_newMDicKey[indexPath.section]];
    cell.pModel = secArray[secArray.count - indexPath.row - 1];
    return cell;
}
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath{
    if (editingStyle == UITableViewCellEditingStyleDelete) {

        YDEditMessageVC *vc = [[YDEditMessageVC alloc] initWithNibName:@"YDEditMessageVC" bundle:nil];
        vc.vcTitle = @"标记非意向原因";
        vc.ClickOKButtonBlack = ^(NSString *str ){
            
            YDPassengerModel *pModel = [[_newMDic objectForKey:_newMDicKey[indexPath.section]] objectAtIndex:indexPath.row];
            NSString *url = [NSString stringWithFormat:@"%@type=update&sid=%@",kAddPassenger,getNSUser(@"youdao.CRM_SID")];
            NSDictionary *rDic = @{@"id":pModel.modelId,
                                   @"memberId":pModel.memberId,
                                   @"count":@(pModel.count),
                                   @"status":@3,@"cause":str};
            NSMutableDictionary *mDic = [NSMutableDictionary dictionaryWithDictionary:rDic];
            
            if (pModel.quoteId.length > 0) {
                [mDic setObject:pModel.quoteId forKey:@"quoteId"];
            }
            
            [self showHudInView:self.view hint:@""];
            [YDDataService startRequest:mDic url:url block:^(id result) {
                
                [self hideHud];
                [self showHint:@"标记为非意成功" yOffset:0];

                if ([[result objectForKey:@"code"] isEqualToString:@"S_OK"]) {
                    
                    [[_newMDic objectForKey:_newMDicKey[indexPath.section]] removeObjectAtIndex:indexPath.row];
                    if ([[_newMDic objectForKey:_newMDicKey[indexPath.section]] count] == 0) {
                        [_newMDic removeObjectForKey:_newMDicKey[indexPath.section]];
                    }
                    
                    [_myTableView reloadData];
                }
                
                [self showHudInView:kWindow hint:@""];
                [self loadPassengersFromNetwork];
                
            } failBlock:^(id error) {
                [self hideHud];
                [self showHint:@"标记为非意向失败" yOffset:0];
            }];
        };
        
         YDNavigationController *nvc = [[YDNavigationController alloc] initWithRootViewController:vc];
        [self presentViewController:nvc animated:YES completion:nil];
    }
}
- (nullable NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath{
    return @"标记为\n非意向";
}
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath{
    YDPassengerModel *m  = [[_newMDic objectForKey:_newMDicKey[indexPath.section]] objectAtIndex:indexPath.row];
    return m.hasQuote ? NO : YES;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    NSArray *secArray = _newMDic[_newMDicKey[indexPath.section]];
    _selectPModel = secArray[secArray.count - indexPath.row - 1];

    [self searchNext];
}


@end
